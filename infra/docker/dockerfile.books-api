# Build go binary
FROM golang:1.19.7-alpine3.17 as build_flights-api
ENV CGO_ENABLED 0
ARG BUILD_REF

COPY . /bds

WORKDIR /bds/app/services/books-api
RUN go build -ldflags "-X main.build=${BUILD_REF}"

WORKDIR /bds/app/services/tools/dbmigrate
RUN go build -ldflags "-X main.build=${BUILD_REF}"

WORKDIR /bds/app/services/tools/dbseed
RUN go build -ldflags "-X main.build=${BUILD_REF}"

WORKDIR /bds/app/services/tools/genschema
RUN go build -ldflags "-X main.build=${BUILD_REF}"

WORKDIR /bds/app/services/tools/loadbooks
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Run the go binary in alpine.
FROM alpine:3.15

ARG BUILD_DATE
ARG BUILD_REF

COPY --from=build_flights-api /bds/app/services/books-api/books-api /services/books-api
COPY --from=build_flights-api /bds/app/services/tools/dbmigrate/dbmigrate /services/tools/dbmigrate
COPY --from=build_flights-api /bds/app/services/tools/dbseed/dbseed /services/tools/dbseed
COPY --from=build_flights-api /bds/app/services/tools/genschema/genschema /services/tools/genschema
COPY --from=build_flights-api /bds/app/services/tools/loadbooks/loadbooks /services/tools/loadbooks

WORKDIR /services

RUN chmod +x tools/dbmigrate
RUN chmod +x tools/dbseed
RUN chmod +x tools/genschema
RUN chmod +x tools/loadbooks

CMD ["./books-api"]
